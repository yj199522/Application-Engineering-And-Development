/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import Model.Information;
import java.awt.Color;
import java.text.ParseException;
import java.text.ParsePosition;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
import java.time.format.ResolverStyle;
import java.util.Date;
import java.util.regex.Pattern;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author yashjain
 */
public class CreateJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CreateJPanel
     */
    Information information;
    public CreateJPanel(Information information) {
        initComponents();
        this.information = information;
        System.out.println("Count is now: " + " seconds");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Title = new javax.swing.JLabel();
        Save = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        Name = new javax.swing.JLabel();
        Tele = new javax.swing.JLabel();
        DOB = new javax.swing.JLabel();
        Geographic = new javax.swing.JLabel();
        FAX = new javax.swing.JLabel();
        Email = new javax.swing.JLabel();
        SSN = new javax.swing.JLabel();
        Medical = new javax.swing.JLabel();
        Health = new javax.swing.JLabel();
        Account = new javax.swing.JLabel();
        Certificate = new javax.swing.JLabel();
        Vehicle = new javax.swing.JLabel();
        Device = new javax.swing.JLabel();
        LinkedIn = new javax.swing.JLabel();
        IP = new javax.swing.JLabel();
        Biometric = new javax.swing.JLabel();
        Photo = new javax.swing.JLabel();
        Unique = new javax.swing.JLabel();
        NameTxt = new javax.swing.JTextField();
        TeleTxt = new javax.swing.JTextField();
        DOBTxt = new javax.swing.JTextField();
        GeographicTxt = new javax.swing.JTextField();
        FAXTxt = new javax.swing.JTextField();
        EmailTxt = new javax.swing.JTextField();
        SSNTxt = new javax.swing.JTextField();
        MedicalTxt = new javax.swing.JTextField();
        HealthTxt = new javax.swing.JTextField();
        AccountTxt = new javax.swing.JTextField();
        CertificateTxt = new javax.swing.JTextField();
        VehicleTxt = new javax.swing.JTextField();
        DeviceTxt = new javax.swing.JTextField();
        LinkedInTxt = new javax.swing.JTextField();
        IPTxt = new javax.swing.JTextField();
        BiometricBtn = new javax.swing.JButton();
        PhotoBtn = new javax.swing.JButton();
        UniqueTxt = new javax.swing.JTextField();
        DOBError = new javax.swing.JLabel();
        NameError = new javax.swing.JLabel();
        TeleError = new javax.swing.JLabel();
        GeographicError = new javax.swing.JLabel();
        FaxError = new javax.swing.JLabel();
        EmailError = new javax.swing.JLabel();
        SSNError = new javax.swing.JLabel();
        MedicalError = new javax.swing.JLabel();
        HealthError = new javax.swing.JLabel();
        AccountError = new javax.swing.JLabel();
        CertificateError = new javax.swing.JLabel();
        VehicleError = new javax.swing.JLabel();
        DeviceError = new javax.swing.JLabel();
        LinkedInError = new javax.swing.JLabel();
        IPError = new javax.swing.JLabel();
        BiometricError = new javax.swing.JLabel();
        PhotoError = new javax.swing.JLabel();
        UniqueError = new javax.swing.JLabel();

        setBackground(new java.awt.Color(240, 248, 255));

        Title.setBackground(java.awt.Color.white);
        Title.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        Title.setForeground(new java.awt.Color(0, 83, 170));
        Title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Title.setText("Create Profile");

        Save.setBackground(new java.awt.Color(0, 83, 170));
        Save.setForeground(new java.awt.Color(255, 255, 255));
        Save.setText("SAVE");
        Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveActionPerformed(evt);
            }
        });

        jScrollPane1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(213, 217, 220), 1, true));
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setForeground(new java.awt.Color(72, 72, 72));

        Name.setForeground(new java.awt.Color(72, 72, 72));
        Name.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        Name.setText("Name");

        Tele.setForeground(new java.awt.Color(72, 72, 72));
        Tele.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        Tele.setText("Telephone number");

        DOB.setForeground(new java.awt.Color(72, 72, 72));
        DOB.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        DOB.setText("Date of birth");

        Geographic.setForeground(new java.awt.Color(72, 72, 72));
        Geographic.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        Geographic.setText("Address");

        FAX.setForeground(new java.awt.Color(72, 72, 72));
        FAX.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        FAX.setText("FAX number");
        FAX.setToolTipText("");

        Email.setForeground(new java.awt.Color(72, 72, 72));
        Email.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        Email.setText("Email address");

        SSN.setForeground(new java.awt.Color(72, 72, 72));
        SSN.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        SSN.setText("Social Security number");

        Medical.setForeground(new java.awt.Color(72, 72, 72));
        Medical.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        Medical.setText("Medical record number");

        Health.setForeground(new java.awt.Color(72, 72, 72));
        Health.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        Health.setText("Health plan beneficiary number");

        Account.setForeground(new java.awt.Color(72, 72, 72));
        Account.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        Account.setText("Bank account numbers");

        Certificate.setForeground(new java.awt.Color(72, 72, 72));
        Certificate.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        Certificate.setText("Certificate/license number");

        Vehicle.setForeground(new java.awt.Color(72, 72, 72));
        Vehicle.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        Vehicle.setText("Vehicle identifiers and serial numbers");

        Device.setForeground(new java.awt.Color(72, 72, 72));
        Device.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        Device.setText("Device identifiers and serial numbers");

        LinkedIn.setForeground(new java.awt.Color(72, 72, 72));
        LinkedIn.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        LinkedIn.setText("LinkedIn");

        IP.setForeground(new java.awt.Color(72, 72, 72));
        IP.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        IP.setText("Internet protocol addresses");

        Biometric.setForeground(new java.awt.Color(72, 72, 72));
        Biometric.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        Biometric.setText("Biometric identifiers");
        Biometric.setToolTipText("");

        Photo.setForeground(new java.awt.Color(72, 72, 72));
        Photo.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        Photo.setText("Full face photos and comparable images");

        Unique.setForeground(new java.awt.Color(72, 72, 72));
        Unique.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        Unique.setText("Any unique identifying number, characteristic, or code");

        NameTxt.setForeground(new java.awt.Color(72, 72, 72));
        NameTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NameTxtActionPerformed(evt);
            }
        });

        TeleTxt.setForeground(new java.awt.Color(72, 72, 72));
        TeleTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TeleTxtActionPerformed(evt);
            }
        });

        DOBTxt.setForeground(new java.awt.Color(72, 72, 72));
        DOBTxt.setToolTipText("MM/DD/YYYY");
        DOBTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DOBTxtActionPerformed(evt);
            }
        });

        GeographicTxt.setForeground(new java.awt.Color(72, 72, 72));

        FAXTxt.setForeground(new java.awt.Color(72, 72, 72));

        EmailTxt.setForeground(new java.awt.Color(72, 72, 72));
        EmailTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EmailTxtActionPerformed(evt);
            }
        });

        SSNTxt.setForeground(new java.awt.Color(72, 72, 72));

        MedicalTxt.setForeground(new java.awt.Color(72, 72, 72));
        MedicalTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MedicalTxtActionPerformed(evt);
            }
        });

        HealthTxt.setForeground(new java.awt.Color(72, 72, 72));

        AccountTxt.setForeground(new java.awt.Color(72, 72, 72));
        AccountTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AccountTxtActionPerformed(evt);
            }
        });

        CertificateTxt.setForeground(new java.awt.Color(72, 72, 72));
        CertificateTxt.setToolTipText("");
        CertificateTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CertificateTxtActionPerformed(evt);
            }
        });

        VehicleTxt.setForeground(new java.awt.Color(72, 72, 72));

        DeviceTxt.setForeground(new java.awt.Color(72, 72, 72));
        DeviceTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeviceTxtActionPerformed(evt);
            }
        });

        LinkedInTxt.setForeground(new java.awt.Color(72, 72, 72));

        IPTxt.setForeground(new java.awt.Color(72, 72, 72));
        IPTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IPTxtActionPerformed(evt);
            }
        });

        BiometricBtn.setBackground(new java.awt.Color(0, 83, 170));
        BiometricBtn.setForeground(new java.awt.Color(255, 255, 255));
        BiometricBtn.setText("Upload");
        BiometricBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BiometricBtnActionPerformed(evt);
            }
        });

        PhotoBtn.setBackground(new java.awt.Color(0, 83, 170));
        PhotoBtn.setForeground(new java.awt.Color(255, 255, 255));
        PhotoBtn.setText("Upload");
        PhotoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PhotoBtnActionPerformed(evt);
            }
        });

        UniqueTxt.setForeground(new java.awt.Color(72, 72, 72));
        UniqueTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UniqueTxtActionPerformed(evt);
            }
        });

        DOBError.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
        DOBError.setForeground(java.awt.Color.red);
        DOBError.setText("** Format of Date is MM/DD/YYYY **");
        DOBError.setToolTipText("");

        NameError.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
        NameError.setForeground(java.awt.Color.red);

        TeleError.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
        TeleError.setForeground(java.awt.Color.red);
        TeleError.setText("** Format should be 1111111111**");

        GeographicError.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
        GeographicError.setForeground(java.awt.Color.red);
        GeographicError.setToolTipText("");

        FaxError.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
        FaxError.setForeground(java.awt.Color.red);
        FaxError.setText("** Format should be 22222222**");

        EmailError.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
        EmailError.setForeground(java.awt.Color.red);

        SSNError.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
        SSNError.setForeground(java.awt.Color.red);
        SSNError.setText("** Format should be 333333333**");

        MedicalError.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
        MedicalError.setForeground(java.awt.Color.red);

        HealthError.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
        HealthError.setForeground(java.awt.Color.red);

        AccountError.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
        AccountError.setForeground(java.awt.Color.red);

        CertificateError.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
        CertificateError.setForeground(java.awt.Color.red);
        CertificateError.setToolTipText("");

        VehicleError.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
        VehicleError.setForeground(java.awt.Color.red);
        VehicleError.setText("** Including license plates **");

        DeviceError.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
        DeviceError.setForeground(java.awt.Color.red);
        DeviceError.setToolTipText("");

        LinkedInError.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
        LinkedInError.setForeground(java.awt.Color.red);
        LinkedInError.setText("** https://www.linkedin.com/sometext **");

        IPError.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
        IPError.setForeground(java.awt.Color.red);
        IPError.setText("** 255.255.255.255 **");

        BiometricError.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
        BiometricError.setForeground(java.awt.Color.red);

        PhotoError.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
        PhotoError.setForeground(java.awt.Color.red);

        UniqueError.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
        UniqueError.setForeground(java.awt.Color.red);
        UniqueError.setToolTipText("");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(Certificate, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Photo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Unique, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(Biometric, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(IP, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(LinkedIn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(Vehicle, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(Tele, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(DOB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Geographic, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(FAX, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Email, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(SSN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Medical, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Health, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Account, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Name, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(CertificateTxt, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE)
                                    .addComponent(AccountTxt, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(HealthTxt, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(MedicalTxt, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(SSNTxt, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(EmailTxt, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(FAXTxt, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(GeographicTxt, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(DOBTxt, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(TeleTxt, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(NameTxt, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(VehicleTxt))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(FaxError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(19, 19, 19)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(DOBError)
                                            .addComponent(NameError)
                                            .addComponent(TeleError)
                                            .addComponent(GeographicError)
                                            .addComponent(EmailError)
                                            .addComponent(SSNError)
                                            .addComponent(MedicalError)
                                            .addComponent(HealthError)
                                            .addComponent(AccountError)
                                            .addComponent(VehicleError)
                                            .addComponent(IPError)
                                            .addComponent(BiometricError)
                                            .addComponent(PhotoError)
                                            .addComponent(UniqueError)
                                            .addComponent(CertificateError, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(UniqueTxt)
                                    .addComponent(PhotoBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE)
                                    .addComponent(BiometricBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(IPTxt)
                                    .addComponent(LinkedInTxt, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(18, 18, 18)
                                .addComponent(LinkedInError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(Device, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(DeviceTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(DeviceError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(39, 39, 39))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Name, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NameError))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Tele, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TeleError)
                    .addComponent(TeleTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DOBTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DOB)
                    .addComponent(DOBError))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Geographic)
                    .addComponent(GeographicTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GeographicError))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FAX)
                    .addComponent(FAXTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FaxError))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Email)
                    .addComponent(EmailTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(EmailError))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SSN)
                    .addComponent(SSNTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SSNError))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Medical)
                    .addComponent(MedicalTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MedicalError))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Health)
                    .addComponent(HealthTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(HealthError))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Account, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AccountTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AccountError))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Certificate, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CertificateTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CertificateError))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Vehicle, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(VehicleTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(VehicleError))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Device)
                    .addComponent(DeviceTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DeviceError))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LinkedIn)
                    .addComponent(LinkedInTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LinkedInError))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(IP)
                    .addComponent(IPTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(IPError))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Biometric)
                    .addComponent(BiometricBtn)
                    .addComponent(BiometricError))
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Photo)
                    .addComponent(PhotoBtn)
                    .addComponent(PhotoError))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Unique)
                    .addComponent(UniqueTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(UniqueError))
                .addGap(20, 20, 20))
        );

        jScrollPane1.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Title, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 868, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(Save, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Title, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Save, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveActionPerformed

        boolean valid = ValidateEmpty();
        boolean finalValid = Validate();
        if(valid && finalValid) SaveData();
    }//GEN-LAST:event_SaveActionPerformed

    private void UniqueTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UniqueTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UniqueTxtActionPerformed

    private void PhotoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PhotoBtnActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter(
            "JPG & PNG Images", "jpg", "png");
        chooser.setFileFilter(filter);
        int returnVal = chooser.showOpenDialog(this);
        if(returnVal == JFileChooser.APPROVE_OPTION) {
            String filePath = chooser.getSelectedFile().getAbsolutePath();
            JOptionPane.showMessageDialog(this, "Select this image for Photo","Warning message", JOptionPane.WARNING_MESSAGE);
            information.setPhoto(filePath);
            JOptionPane.showMessageDialog(this, "Photo Uploaded Successful");
            PhotoBtn.setBackground(Color.green);
            PhotoBtn.setText("Reupload");
            PhotoBtn.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_PhotoBtnActionPerformed

    private void BiometricBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BiometricBtnActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter(
            "JPG & PNG Images", "jpg", "png");
        chooser.setFileFilter(filter);
        int returnVal = chooser.showOpenDialog(this);
        if(returnVal == JFileChooser.APPROVE_OPTION) {
            String filePath = chooser.getSelectedFile().getAbsolutePath();
            JOptionPane.showMessageDialog(this, "Select this image for Biometric","Warning message", JOptionPane.WARNING_MESSAGE);
            information.setBiometric(filePath);
            JOptionPane.showMessageDialog(this, "Biometric Uploaded Successful");
            BiometricBtn.setBackground(Color.green);
            BiometricBtn.setText("Reupload");
            BiometricBtn.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_BiometricBtnActionPerformed

    private void IPTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IPTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IPTxtActionPerformed

    private void DeviceTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeviceTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DeviceTxtActionPerformed

    private void CertificateTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CertificateTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CertificateTxtActionPerformed

    private void AccountTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AccountTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AccountTxtActionPerformed

    private void MedicalTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MedicalTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MedicalTxtActionPerformed

    private void EmailTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EmailTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EmailTxtActionPerformed

    private void DOBTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DOBTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DOBTxtActionPerformed

    private void NameTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NameTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NameTxtActionPerformed

    private void TeleTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TeleTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TeleTxtActionPerformed

    private boolean ValidateEmpty(){
       int tele = TeleTxt.getText().trim().length();
       boolean isValid = true;
       if(NameTxt.getText().trim().isEmpty()){
          NameError.setText("Name is required");
          isValid =  false; 
       } else NameError.setText("");
       if(tele == 0) {
            TeleError.setText("Telephone numbers is required");
            isValid = false;
       } else TeleError.setText("");
       if(DOBTxt.getText().trim().isEmpty()){
             DOBError.setText("Date of Birth is required");
             isValid = false;
       } else DOBError.setText("");
       tele = FAXTxt.getText().trim().length();
       if(tele == 0) {
            FaxError.setText("FAX numbers is required");
            isValid = false;
        } else FaxError.setText("");
        if(EmailTxt.getText().trim().isEmpty()){
          EmailError.setText("Email is required");
          isValid = false; 
        } else EmailError.setText("");
        if(GeographicTxt.getText().trim().isEmpty()){
          GeographicError.setText("Address is required");
          isValid = false; 
        } else GeographicError.setText("");
       if(SSNTxt.getText().trim().isEmpty()){
          SSNError.setText("SSN is required");
          isValid = false; 
        } else SSNError.setText("");
       if(MedicalTxt.getText().trim().isEmpty()){
          MedicalError.setText("Medical Record Number is required");
          isValid = false;
       } else MedicalError.setText("");
       if(HealthTxt.getText().trim().isEmpty()){
           HealthError.setText("Health plan number is required");
           isValid = false;
       } else HealthError.setText("");
       if(AccountTxt.getText().trim().isEmpty()){
           AccountError.setText("Account Number is required");
           isValid = false;
       } else {
             try {
                long d = Long.parseLong(AccountTxt.getText());
                AccountError.setText("");
            } catch (NumberFormatException nfe) {
                AccountError.setText("Account Number can only contain numbers");
                isValid = false;
            }
       }
       if(CertificateTxt.getText().trim().isEmpty()){
           CertificateError.setText("Certificate is required");
           isValid = false;
       } else CertificateError.setText("");
       if(VehicleTxt.getText().trim().isEmpty()){
           VehicleError.setText("Vehicle identifiers is required");
           isValid = false;
       } else VehicleError.setText("");
       if(DeviceTxt.getText().trim().isEmpty()){
           DeviceError.setText("Device identifiers is required");
           isValid = false;
       } else DeviceError.setText("");
       if(LinkedInTxt.getText().trim().isEmpty()){
           LinkedInError.setText("LinkedIn is required");
           isValid = false;
       } else LinkedInError.setText("");
       if(IPTxt.getText().trim().isEmpty()){
           IPError.setText("Internet Protocol is required");
           isValid = false;
       } else IPError.setText("");
       if(information.getBiometric() == null){
           BiometricError.setText("Biometric is required");
           isValid = false;
       } else BiometricError.setText("");
       if(information.getPhoto() == null){
           PhotoError.setText("Photo is required");
           isValid = false;
       } else PhotoError.setText("");
       if(UniqueTxt.getText().trim().isEmpty()){
           UniqueError.setText("Code is required");
           isValid = false;
       } else UniqueError.setText("");
       return isValid;
    }
    
    private boolean Validate() {
        boolean isValid = true;
        int tele = TeleTxt.getText().trim().length();
        Pattern ptr = Pattern.compile("^\\S+@\\S+\\.\\S+$", Pattern.CASE_INSENSITIVE);
        String numRange = "(\\d{1,2}|(0|1)\\" + "d{2}|2[0-4]\\d|25[0-5])" + "\\." 
              + "(\\d{1,2}|(0|1)\\" + "d{2}|2[0-4]\\d|25[0-5])" + "\\." 
              + "(\\d{1,2}|(0|1)\\" + "d{2}|2[0-4]\\d|25[0-5])" + "\\." 
              + "(\\d{1,2}|(0|1)\\" + "d{2}|2[0-4]\\d|25[0-5])";
        Pattern ip = Pattern.compile(numRange);
        Pattern Link = Pattern.compile("^https:\\/\\/[a-z]{2,3}\\.linkedin\\.com\\/.*$");
        if(tele > 0) {
            try {
            long d = Long.parseLong(TeleTxt.getText());
                if (tele < 10 || tele > 10) {
                    TeleError.setText("Telephone numbers is wrong");
                    isValid = false;
                } else{
                    TeleError.setText("");
                }
            } catch (NumberFormatException nfe) {
                TeleError.setText("Telephone can only contain numbers");
                isValid = false;
            }
        } 
        if(!DOBTxt.getText().trim().isEmpty()){  
            if(!isLegalDate(DOBTxt.getText())) {
            DOBError.setText("Date of Birth is wrong");
            isValid = false;
            } else DOBError.setText("");
        }
        tele = FAXTxt.getText().trim().length();
        if(tele > 0) {
            try {
                long d =  Long.parseLong(SSNTxt.getText());
                 if(tele < 8 || tele > 8) {
                    FaxError.setText("FAX numbers is wrong");
                    isValid = false;
                } else FaxError.setText("");
            } catch (NumberFormatException nfe) {
                FaxError.setText("FAX can only contain numbers");
                isValid = false;
            }
        }
        if(!EmailTxt.getText().trim().isEmpty()){ 
            if(!ptr.matcher(EmailTxt.getText()).matches()){
                EmailError.setText("Email is wrong");
                 isValid = false;
            } else  EmailError.setText("");
        }
        tele = SSNTxt.getText().trim().length();
        if(tele > 0) { 
            try {
                long d =  Long.parseLong(SSNTxt.getText());
                 if(tele < 9 || tele > 9) {
                    SSNError.setText("Social Security number is wrong");
                    isValid = false;
                } else SSNError.setText("");
            } catch (NumberFormatException nfe) {
                SSNError.setText("Social Security number can only contain numbers");
                isValid = false;
            }
        }
        if(!IPTxt.getText().trim().isEmpty()){ 
                if(!ip.matcher(IPTxt.getText()).matches()){
                 IPError.setText("IP address is wrong");
                 isValid = false;
            } else IPError.setText("");
        }
        if(!LinkedInTxt.getText().trim().isEmpty()){ 
            if(!Link.matcher(LinkedInTxt.getText()).matches()){
                 LinkedInError.setText("LinkedIn link is wrong");
                 isValid = false;
            } else LinkedInError.setText("");
        }
        return isValid;
    }
    
    private void SaveData() {
        information.setName(NameTxt.getText());
        String tele = TeleTxt.getText();
        System.out.println(Long.parseLong(tele));
        information.setTelephone(Long.parseLong(tele));
        information.setDOB(DOBTxt.getText());
        information.setGeographic(GeographicTxt.getText());
        tele = FAXTxt.getText();
        information.setFax(Long.parseLong(tele));
        information.setEmail(EmailTxt.getText());
        tele = SSNTxt.getText();
        information.setSSN(Long.parseLong(tele));
        information.setMedical(MedicalTxt.getText());
        information.setHealth(HealthTxt.getText());
        tele = AccountTxt.getText();
        information.setAccount(Long.parseLong(tele));
        information.setCertificate(CertificateTxt.getText());
        information.setVehicle(VehicleTxt.getText());
        information.setDevice(DeviceTxt.getText());
        information.setLinkedIn(LinkedInTxt.getText());
        information.setIP(IPTxt.getText());
        information.setUnqiue(UniqueTxt.getText());
        information.setSaveData(true);
        JOptionPane.showMessageDialog(this, "Data Save Succesfully");
    }
    
    boolean isLegalDate(String date) {
        boolean valid = false;
        try {
            // ResolverStyle.STRICT for 30, 31 days checking, and also leap year.
            LocalDate.parse(date, DateTimeFormatter.ofPattern("M/d/uuuu").withResolverStyle(ResolverStyle.STRICT));
            valid = true;

        } catch (DateTimeParseException e) {
            valid = false;
        }
        return valid;
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Account;
    private javax.swing.JLabel AccountError;
    private javax.swing.JTextField AccountTxt;
    private javax.swing.JLabel Biometric;
    private javax.swing.JButton BiometricBtn;
    private javax.swing.JLabel BiometricError;
    private javax.swing.JLabel Certificate;
    private javax.swing.JLabel CertificateError;
    private javax.swing.JTextField CertificateTxt;
    private javax.swing.JLabel DOB;
    private javax.swing.JLabel DOBError;
    private javax.swing.JTextField DOBTxt;
    private javax.swing.JLabel Device;
    private javax.swing.JLabel DeviceError;
    private javax.swing.JTextField DeviceTxt;
    private javax.swing.JLabel Email;
    private javax.swing.JLabel EmailError;
    private javax.swing.JTextField EmailTxt;
    private javax.swing.JLabel FAX;
    private javax.swing.JTextField FAXTxt;
    private javax.swing.JLabel FaxError;
    private javax.swing.JLabel Geographic;
    private javax.swing.JLabel GeographicError;
    private javax.swing.JTextField GeographicTxt;
    private javax.swing.JLabel Health;
    private javax.swing.JLabel HealthError;
    private javax.swing.JTextField HealthTxt;
    private javax.swing.JLabel IP;
    private javax.swing.JLabel IPError;
    private javax.swing.JTextField IPTxt;
    private javax.swing.JLabel LinkedIn;
    private javax.swing.JLabel LinkedInError;
    private javax.swing.JTextField LinkedInTxt;
    private javax.swing.JLabel Medical;
    private javax.swing.JLabel MedicalError;
    private javax.swing.JTextField MedicalTxt;
    private javax.swing.JLabel Name;
    private javax.swing.JLabel NameError;
    private javax.swing.JTextField NameTxt;
    private javax.swing.JLabel Photo;
    private javax.swing.JButton PhotoBtn;
    private javax.swing.JLabel PhotoError;
    private javax.swing.JLabel SSN;
    private javax.swing.JLabel SSNError;
    private javax.swing.JTextField SSNTxt;
    private javax.swing.JButton Save;
    private javax.swing.JLabel Tele;
    private javax.swing.JLabel TeleError;
    private javax.swing.JTextField TeleTxt;
    private javax.swing.JLabel Title;
    private javax.swing.JLabel Unique;
    private javax.swing.JLabel UniqueError;
    private javax.swing.JTextField UniqueTxt;
    private javax.swing.JLabel Vehicle;
    private javax.swing.JLabel VehicleError;
    private javax.swing.JTextField VehicleTxt;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
