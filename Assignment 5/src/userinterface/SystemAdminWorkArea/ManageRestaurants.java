/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.SystemAdminWorkArea;

import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Restaurant.Restaurant;
import Business.RestaurantManager.RestaurantManager;
import Business.Role.AdminRole;
import Business.Role.SystemAdminRole;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author yashj
 */
public class ManageRestaurants extends javax.swing.JPanel {

    JPanel userProcessContainer;
//    EcoSystem ecosystem;
    private static EcoSystem ecosystem;
    DefaultTableModel model;

    /**
     * Creates new form ManageRestaurants
     */
    public ManageRestaurants(JPanel userProcessContainer1, EcoSystem system) {
        initComponents();
        userProcessContainer = userProcessContainer1;
        ecosystem = system;
        model = new DefaultTableModel();
        restaurantList.setModel(model);
        model.addColumn("Name");
        model.addColumn("Manager");
        model.addColumn("Location");
        model.addColumn("Phone");

        showComboBoxesList();
        showDeleteList();
        viewRestaurantList();
    }

    public void viewRestaurantList() {
        if (ecosystem.getRestaurantDirectory().getRestaurantList().size() > 0) {
            for (int i = 0; i < ecosystem.getRestaurantDirectory().getRestaurantList().size(); i++) {
                model.addRow(new Object[]{
                    ecosystem.getRestaurantDirectory().getRestaurantList().get(i).getName(),
                    ecosystem.getRestaurantDirectory().getRestaurantList().get(i).getManagerDetails().getName(),
                    ecosystem.getRestaurantDirectory().getRestaurantList().get(i).getLocation(),
                    ecosystem.getRestaurantDirectory().getRestaurantList().get(i).getPhone(),});
            }
        }
    }

    public void showDeleteList() {
        for (int i = 0; i < ecosystem.getRestaurantDirectory().getRestaurantList().size(); i++) {
            restListCombo.addItem(ecosystem.getRestaurantDirectory().getRestaurantList().get(i).getName());
            updateRestListCombo.addItem(ecosystem.getRestaurantDirectory().getRestaurantList().get(i).getName());

        }
    }

    public void showComboBoxesList() {
        for (int i = 0; i < ecosystem.getRestaurantManagerDirectory().getRestaurantManagerList().size(); i++) {
            managerListCombo.addItem(ecosystem.getRestaurantManagerDirectory().getRestaurantManagerList().get(i).getName());
            updateManagerListCombo.addItem(ecosystem.getRestaurantManagerDirectory().getRestaurantManagerList().get(i).getName());
        }
    }
    
    public void resetUpdate() {
        updateRestListCombo.setSelectedIndex(0);        
        updateManagerListCombo.setSelectedIndex(0);

        updateLocationText.setText("");
        updatePhoneText.setText("");
        updateRestNameText.setText("");
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        restNameLabel = new javax.swing.JLabel();
        restNameText = new javax.swing.JTextField();
        addRestButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        deleteRestLabel = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        deleteRestButton = new javax.swing.JButton();
        restListCombo = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        restaurantList = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        selectManagerLabel = new javax.swing.JLabel();
        updateRestListCombo = new javax.swing.JComboBox<>();
        updateRestManagerLabel = new javax.swing.JLabel();
        updateBtn = new javax.swing.JButton();
        restNameLabel1 = new javax.swing.JLabel();
        updateRestNameText = new javax.swing.JTextField();
        updateManagerListCombo = new javax.swing.JComboBox<>();
        updateRestManagerLabel1 = new javax.swing.JLabel();
        managerListCombo = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        locationText = new javax.swing.JTextField();
        phoneText = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        updatePhoneText = new javax.swing.JTextField();
        updateLocationText = new javax.swing.JTextField();
        title = new javax.swing.JLabel();

        setBackground(new java.awt.Color(240, 248, 255));
        setForeground(new java.awt.Color(72, 72, 72));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 83, 170));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Add a Restaurant");

        restNameLabel.setForeground(new java.awt.Color(72, 72, 72));
        restNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        restNameLabel.setText("Name");

        restNameText.setForeground(new java.awt.Color(72, 72, 72));
        restNameText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                restNameTextActionPerformed(evt);
            }
        });

        addRestButton.setBackground(new java.awt.Color(0, 83, 170));
        addRestButton.setForeground(new java.awt.Color(255, 255, 255));
        addRestButton.setText("Add ");
        addRestButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addRestButtonActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 83, 170));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Delete a Restaurant");

        deleteRestLabel.setForeground(new java.awt.Color(72, 72, 72));
        deleteRestLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        deleteRestLabel.setText("Name");

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 83, 170));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("View Restaurants");

        deleteRestButton.setBackground(new java.awt.Color(0, 83, 170));
        deleteRestButton.setForeground(new java.awt.Color(255, 255, 255));
        deleteRestButton.setText("Delete");
        deleteRestButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteRestButtonActionPerformed(evt);
            }
        });

        restListCombo.setForeground(new java.awt.Color(72, 72, 72));
        restListCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None" }));
        restListCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                restListComboActionPerformed(evt);
            }
        });

        restaurantList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Manager", "Location", "Phone"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(restaurantList);

        btnBack.setBackground(new java.awt.Color(0, 83, 170));
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 83, 170));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Update Restaurant");

        selectManagerLabel.setForeground(new java.awt.Color(72, 72, 72));
        selectManagerLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        selectManagerLabel.setText("Select Restaurant");

        updateRestListCombo.setForeground(new java.awt.Color(72, 72, 72));
        updateRestListCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None" }));
        updateRestListCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateRestListComboActionPerformed(evt);
            }
        });

        updateRestManagerLabel.setForeground(new java.awt.Color(72, 72, 72));
        updateRestManagerLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        updateRestManagerLabel.setText("Manager Name");

        updateBtn.setBackground(new java.awt.Color(0, 83, 170));
        updateBtn.setForeground(new java.awt.Color(255, 255, 255));
        updateBtn.setText("Update");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        restNameLabel1.setForeground(new java.awt.Color(72, 72, 72));
        restNameLabel1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        restNameLabel1.setText("Name");

        updateRestNameText.setForeground(new java.awt.Color(72, 72, 72));
        updateRestNameText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateRestNameTextActionPerformed(evt);
            }
        });

        updateManagerListCombo.setForeground(new java.awt.Color(72, 72, 72));
        updateManagerListCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None" }));
        updateManagerListCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateManagerListComboActionPerformed(evt);
            }
        });

        updateRestManagerLabel1.setForeground(new java.awt.Color(72, 72, 72));
        updateRestManagerLabel1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        updateRestManagerLabel1.setText("Manager Name");

        managerListCombo.setForeground(new java.awt.Color(72, 72, 72));
        managerListCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None" }));
        managerListCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                managerListComboActionPerformed(evt);
            }
        });

        jLabel3.setForeground(new java.awt.Color(72, 72, 72));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel3.setText("Phone");

        jLabel6.setForeground(new java.awt.Color(72, 72, 72));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel6.setText("Location");

        locationText.setForeground(new java.awt.Color(72, 72, 72));
        locationText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                locationTextActionPerformed(evt);
            }
        });

        phoneText.setForeground(new java.awt.Color(72, 72, 72));

        jLabel7.setForeground(new java.awt.Color(72, 72, 72));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel7.setText("Phone");

        jLabel8.setForeground(new java.awt.Color(72, 72, 72));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel8.setText("Location");

        updatePhoneText.setForeground(new java.awt.Color(72, 72, 72));
        updatePhoneText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatePhoneTextActionPerformed(evt);
            }
        });

        updateLocationText.setForeground(new java.awt.Color(72, 72, 72));
        updateLocationText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateLocationTextActionPerformed(evt);
            }
        });

        title.setBackground(new java.awt.Color(255, 51, 0));
        title.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        title.setForeground(new java.awt.Color(0, 83, 170));
        title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title.setText("Welcome to Foodie");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(addRestButton, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(restNameLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(updateRestManagerLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE)
                                                .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addGap(18, 18, 18)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(managerListCombo, 0, 145, Short.MAX_VALUE)
                                                .addComponent(restNameText, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                                                .addComponent(locationText, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                                                .addComponent(phoneText)))))
                                .addGap(0, 0, 0)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 401, Short.MAX_VALUE)))
                            .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(selectManagerLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(restNameLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(20, 20, 20)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(updateManagerListCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(updateRestNameText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(updateRestListCombo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(updateRestManagerLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE))
                                .addGap(20, 20, 20)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(updatePhoneText, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(updateLocationText, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(updateBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(156, 156, 156)
                                .addComponent(deleteRestButton, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(deleteRestLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(restListCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(94, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(title, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {addRestButton, btnBack, deleteRestButton, updateBtn});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBack))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(restNameLabel)
                            .addComponent(restNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(managerListCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(updateRestManagerLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(phoneText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(locationText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(addRestButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(deleteRestLabel)
                            .addComponent(restListCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(deleteRestButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(selectManagerLabel)
                            .addComponent(updateRestListCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(updateRestNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(restNameLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(updateRestManagerLabel)
                            .addComponent(updateManagerListCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(updatePhoneText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(updateLocationText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(updateBtn)
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {addRestButton, btnBack, deleteRestButton, updateBtn});

    }// </editor-fold>//GEN-END:initComponents

    private void deleteRestButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteRestButtonActionPerformed
        // TODO add your handling code here:
        boolean flag = false;

        String selectedItem = (String) restListCombo.getSelectedItem();
        restListCombo.getSelectedIndex();
        if(restListCombo.getSelectedItem() == null || restListCombo.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null,"Select a value from dropdown of restaurant to delete","Error message", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (flag == false) {
            Boolean isDelete = ecosystem.getRestaurantDirectory().deleteRestaurant(selectedItem);
            for (int i = 0; i < restaurantList.getRowCount(); i++) {
                if (((String) restaurantList.getValueAt(i, 0)).equals(selectedItem)) {
                    model.removeRow(i);
                    restListCombo.removeItemAt(i + 1);
                    updateRestListCombo.removeItemAt(i + 1);
                }//end of if block
            }
            if (isDelete) {
                JOptionPane.showMessageDialog(this, "Restaurant deleted successfully");
            }
        }
        restListCombo.setSelectedIndex(0);
    }//GEN-LAST:event_deleteRestButtonActionPerformed

    private void restNameTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_restNameTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_restNameTextActionPerformed

    public RestaurantManager getCurrent(String name) {
        for (int i = 0; i < ecosystem.getRestaurantManagerDirectory().getRestaurantManagerList().size(); i++) {
            if (ecosystem.getRestaurantManagerDirectory().getRestaurantManagerList().get(i).getName().equals(name)) {
                return ecosystem.getRestaurantManagerDirectory().getRestaurantManagerList().get(i);
            }
        }
        return null;
    }
    
    public Boolean validateFields(String address, String phone, String name) {
        if(phone.isEmpty() || name.isEmpty() || address.isEmpty()) {
            JOptionPane.showMessageDialog(null,"Fields cannot be empty","Error message", JOptionPane.ERROR_MESSAGE);
            return false;
        }else if(phone.length() != 10) {
            JOptionPane.showMessageDialog(null, "PhoneNumber must be of 10 digits","Error message", JOptionPane.ERROR_MESSAGE);
            return false;
        }else if(!phone.matches("^[0-9]+$")) {
            JOptionPane.showMessageDialog(null, "Phone Number must have digits only","Error message", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        return true;
    }
    
    private void addRestButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addRestButtonActionPerformed
        // TODO add your handling code here:
        if(managerListCombo.getSelectedItem() == null || managerListCombo.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null,"Select a value from dropdown of restaurant to update","Error message", JOptionPane.ERROR_MESSAGE);
            return;
        } else if (!validateFields(locationText.getText(), phoneText.getText(), restNameText.getText())) {
            return;
        }
        for (int i = 0; i < ecosystem.getRestaurantDirectory().getRestaurantList().size(); i++) {
            if(ecosystem.getRestaurantDirectory().getRestaurantList().get(i).getName() == null ? restNameText.getText() == null : ecosystem.getRestaurantDirectory().getRestaurantList().get(i).getName().equals(restNameText.getText())){
                JOptionPane.showMessageDialog(null,"Restaurant Already Present", "Error message" ,JOptionPane.ERROR_MESSAGE);
                return;
            }
        }
        String managerSelectedItem = (String) managerListCombo.getSelectedItem();
        String selectedItem = (String) restListCombo.getSelectedItem();
        RestaurantManager rm = getCurrent(managerSelectedItem);
        ecosystem.getRestaurantDirectory().createRestaurant(restNameText.getText(), rm, phoneText.getText(), locationText.getText());
        JOptionPane.showMessageDialog(this, "Restaurant added successfully");
        restListCombo.addItem(restNameText.getText());
        updateRestListCombo.addItem(restNameText.getText());

        model.addRow(new Object[]{
            restNameText.getText(),
            managerSelectedItem,
            locationText.getText(),
            phoneText.getText()
        });
        restNameText.setText("");        
        locationText.setText("");
        phoneText.setText("");

        managerListCombo.setSelectedItem(null);
    }//GEN-LAST:event_addRestButtonActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        SystemAdminWorkAreaJPanel sysAdminwjp = (SystemAdminWorkAreaJPanel) component;
        sysAdminwjp.populateTree();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void updateRestNameTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateRestNameTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_updateRestNameTextActionPerformed

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        // TODO add your handling code here:
        String managerSelectedItem = (String) updateManagerListCombo.getSelectedItem();
        RestaurantManager rm = getCurrent(managerSelectedItem);
        boolean flag = false;

        String selectedItem = (String) updateRestListCombo.getSelectedItem();
        restListCombo.getSelectedIndex();
        if(updateRestListCombo.getSelectedItem() == null || updateRestListCombo.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null,"Select a value from dropdown of restaurant to update","Error message", JOptionPane.ERROR_MESSAGE);
            return;
        } else if (!validateFields(updateLocationText.getText(), updatePhoneText.getText(), updateRestNameText.getText())) {
            return;
        }
        if(updateManagerListCombo.getSelectedItem() == null || updateManagerListCombo.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null,"Select a value from manager dropdown of restaurant to update","Error message", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (flag == false) {
//            Boolean isDelete = ecosystem.getRestaurantDirectory().deleteRestaurant(selectedItem);
            for (int i = 0; i < ecosystem.getRestaurantDirectory().getRestaurantList().size(); i++) {
                if (ecosystem.getRestaurantDirectory().getRestaurantList().get(i).getName().equals(selectedItem)) {
                    ecosystem.getRestaurantDirectory().getRestaurantList().get(i).setName(updateRestNameText.getText());
                    ecosystem.getRestaurantDirectory().getRestaurantList().get(i).setLocation(updateLocationText.getText());
                    ecosystem.getRestaurantDirectory().getRestaurantList().get(i).setPhone(updatePhoneText.getText());
                    ecosystem.getRestaurantDirectory().getRestaurantList().get(i).setManagerDetails(rm);
                }
            }
        }

        for (int i = 0; i < restaurantList.getRowCount(); i++) {
            if (((String) restaurantList.getValueAt(i, 0)).equals(selectedItem)) {
                restListCombo.addItem(updateRestNameText.getText());
                model.addRow(new Object[]{
                    updateRestNameText.getText(),
                    managerSelectedItem,
                    updateLocationText.getText(),
                    updatePhoneText.getText()
                });
                model.removeRow(i);
                restListCombo.removeItemAt(i + 1);
            }//end of if block
        }
        resetUpdate();
    }//GEN-LAST:event_updateBtnActionPerformed

    private void updateRestListComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateRestListComboActionPerformed
        // TODO add your handling code here:
        if (updateRestListCombo.getSelectedItem() != "None") {
            String selectedItem = (String) updateRestListCombo.getSelectedItem();
            for (int i = 0; i < ecosystem.getRestaurantDirectory().getRestaurantList().size(); i++) {
                if (ecosystem.getRestaurantDirectory().getRestaurantList().get(i).getName().equalsIgnoreCase(selectedItem)) {
                    updateRestNameText.setText(ecosystem.getRestaurantDirectory().getRestaurantList().get(i).getName());
                    updateLocationText.setText(ecosystem.getRestaurantDirectory().getRestaurantList().get(i).getLocation());
                    updatePhoneText.setText(ecosystem.getRestaurantDirectory().getRestaurantList().get(i).getPhone());
                    break;
                }
            }
        }else{
            updateRestNameText.setText("");
            updateLocationText.setText("");
            updatePhoneText.setText("");
            updateManagerListCombo.setSelectedItem(null);
        }
    }//GEN-LAST:event_updateRestListComboActionPerformed

    private void updatePhoneTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatePhoneTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_updatePhoneTextActionPerformed

    private void updateLocationTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateLocationTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_updateLocationTextActionPerformed

    private void locationTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_locationTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_locationTextActionPerformed

    private void restListComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_restListComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_restListComboActionPerformed

    private void managerListComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_managerListComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_managerListComboActionPerformed

    private void updateManagerListComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateManagerListComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_updateManagerListComboActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addRestButton;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton deleteRestButton;
    private javax.swing.JLabel deleteRestLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField locationText;
    private javax.swing.JComboBox<String> managerListCombo;
    private javax.swing.JTextField phoneText;
    private javax.swing.JComboBox<String> restListCombo;
    private javax.swing.JLabel restNameLabel;
    private javax.swing.JLabel restNameLabel1;
    private javax.swing.JTextField restNameText;
    private javax.swing.JTable restaurantList;
    private javax.swing.JLabel selectManagerLabel;
    private javax.swing.JLabel title;
    private javax.swing.JButton updateBtn;
    private javax.swing.JTextField updateLocationText;
    private javax.swing.JComboBox<String> updateManagerListCombo;
    private javax.swing.JTextField updatePhoneText;
    private javax.swing.JComboBox<String> updateRestListCombo;
    private javax.swing.JLabel updateRestManagerLabel;
    private javax.swing.JLabel updateRestManagerLabel1;
    private javax.swing.JTextField updateRestNameText;
    // End of variables declaration//GEN-END:variables
}
